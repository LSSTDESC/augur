generate:
  augur: # general options
    # the folowing two options are place-holders for what
    # will once be part of TJPCov interface
    fsky : &fsky 0.35
    add_noise: &add_noise False # add a realization of noise?
      
  parameters: &parameters
    Omega_k: 0.0
    Omega_b: 0.0492
    Omega_c: 0.26639999999999997  # = 0.3156 - 0.0492
    w0: -1.0
    wa: 0.0
    h: 0.6727
    sigma8: 0.83 
    n_s: 0.9645
  
    # IA model
    eta_ia: 0.0
    eta_ia_highz: 0.0
    beta_ia: 1.0
    A0: 5.0
  
    mult_bias: 0.0
  
    # magic numbers from Tim
    # for the life of me, I cannot figure out how to get CCL to compute the
    # SRD bias values. So they are hard coded here.
    {% for i, bias in [(0, 1.562362), (1, 1.732963), (2, 1.913252), (3, 2.100644), (4, 2.293210)] %}
    bias_lens{{ i }}: {{ bias }}
    {% endfor %}
    
    # photoz shifts for the lensing sources
    {% for i in range(5) %}
    src{{ i }}_delta_z: 0.0
    {% endfor %}
  
    # photoz shifts for the lenses
    {% for i in range(5) %}
    lens{{ i }}_delta_z: 0.0
    {% endfor %}

  two_point: &two_point
    module: firecrown.ccl.two_point
    sacc_file: &sacc_file syndata/srd_v1_3x2.sacc
    fsky: *fsky
    add_noise: *add_noise
    sources: &two_point_sources
      {% for i in range(5) %}
      src{{ i }}:
        kind: WLSource
        sacc_tracer:  src{{ i }}
        Nz_type: Gaussian
        Nz_center: {{ 0.3 + 0.2*i }}
        Nz_sigma: 0.2
        ellipticity_error: 0.3
        number_density: 30 # per arcmin2
        ia_bias: A0
        systematics:
          - delta_z_src{{ i }}
      {% endfor %}
  
      {% for i in range(5) %}
      lens{{ i }}:
        kind: NumberCountsSource
        sacc_tracer:  lens{{ i }}
        Nz_type: TopHat
        Nz_center: {{ 0.3 + 0.2*i }}
        Nz_width: 0.2 
        number_density: 30 # per arcmin2
        bias: bias_lens{{ i }}
        systematics:
          - delta_z_lens{{ i }}
      {% endfor %}
  
    systematics: &two_point_systematics
      {% for thing in ['lens', 'src'] %}
      {% for i in range(5) %}
      delta_z_{{ thing }}{{ i }}:
        kind: PhotoZShiftBias
        delta_z: {{ thing }}{{ i }}_delta_z
      {% endfor %}
      {% endfor %}

    statistics: &two_point_statistics
      {% if True %} # Fourier space
      {% for i in range(5) %}
      {% for j in range(i, 5) %}
      cl_src{{ i }}_src{{ j }}:
        sources: ['src{{ i }}', 'src{{ j }}']
        sacc_data_type: galaxy_shear_cl_ee
        # is there some jinja2 construct for this:
        ell_edges: [23., 32., 45., 64., 89., 123., 172., 240., 333., 464., 646., 900., 1250., 1744., 2400.]
      {% endfor %}
      {% endfor %}
  
      {% for j,i in [(0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 4), (3, 4)] %}
      cl_src{{ i }}_lens{{ j }}:
        sources: ['src{{ i }}', 'lens{{ j }}']
        sacc_data_type: galaxy_shearDensity_cl_e
        ell_edges: [23., 32., 45., 64., 89., 123., 172., 240., 333., 464., 646., 900., 1250., 1744., 2400.]
       {% endfor %}
  
      {% for i in range(5) %}
      cl_lens{{ i }}_lens{{ i }}:
        sources: ['lens{{ i }}', 'lens{{ i }}']
        sacc_data_type: galaxy_density_cl
        ell_edges: [23., 32., 45., 64., 89., 123., 172., 240., 333., 464., 646., 900., 1250., 1744., 2400.]
        {% endfor %}


     {% else %}  # Configuration space
     {% for i in range(5) %}
      {% for j in range(i, 5) %}
      cl_src{{ i }}_src{{ j }}:
        sources: ['src{{ i }}', 'src{{ j }}']
        sacc_data_type: galaxy_shear_xi_plus
        theta_edges: [11.0, 14.0, 17.0, 22.0, 28.0, 35.0, 44.0, 55.0, 69.0, 84.0, 85.0, 100.0, 101.0, 102.0, 103.0, 140.0, 176.0, 222.0]

      cl_src{{ i }}_src{{ j }}:
        sources: ['src{{ i }}', 'src{{ j }}']
        sacc_data_type: galaxy_shear_xi_minus
        # is there some jinja2 construct for this:
        theta_edges: [11.0, 14.0, 17.0, 22.0, 28.0, 35.0, 44.0, 55.0, 69.0, 84.0, 85.0, 100.0, 101.0, 102.0, 103.0, 140.0, 176.0, 222.0]
      {% endfor %}
      {% endfor %}
  
      {% for j,i in [(0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 4), (3, 4)] %}
      cl_src{{ i }}_lens{{ j }}:
        sources: ['src{{ i }}', 'lens{{ j }}']
        sacc_data_type: galaxy_shearDensity_xi_t
        theta_edges: [11.0, 14.0, 17.0, 22.0, 28.0, 35.0, 44.0, 55.0, 69.0, 84.0, 85.0, 100.0, 101.0, 102.0, 103.0, 140.0, 176.0, 222.0]
       {% endfor %}
  
      {% for i in range(5) %}
      cl_lens{{ i }}_lens{{ i }}:
        sources: ['lens{{ i }}', 'lens{{ i }}']
        sacc_data_type: galaxy_density_xi
        theta_edges: [11.0, 14.0, 17.0, 22.0, 28.0, 35.0, 44.0, 55.0, 69.0, 84.0, 85.0, 100.0, 101.0, 102.0, 103.0, 140.0, 176.0, 222.0]
        {% endfor %}
  {% endif %}

        

analyze:
  parameters: *parameters #same as generation
  
  priors:
    module: firecrown.priors
    A0:
      kind: norm
      loc: 5.0
      scale: 3.9
    beta_ia:
      kind: norm
      loc: 1.0
      scale: 1.6
    eta_ia:
      kind: norm
      loc: 0.0
      scale: 2.3
    eta_ia_highz:
      kind: norm
      loc: 0.0
      scale: 0.8
    {% for i in range(5) %}
    bias_lens{{ i }}:
      kind: norm
      loc: 1.9
      scale: 0.9
    {% endfor %}
  

  two_point: 
    module: firecrown.ccl.two_point
    sacc_data: *sacc_file
    sources: *two_point_sources
    systematics: *two_point_systematics
    statistics: *two_point_statistics
    likelihood:
      kind: ConstGaussianLogLike
      data_vector:
      {% for i in range(5) %}
      {% for j in range(i, 5) %}
        - cl_src{{ i }}_src{{ j }}
      {% endfor %}
      {% endfor %}
      {% for j,i in [(0, 2), (0, 3), (0, 4), (1, 3), (1, 4), (2, 4), (3, 4)] %}
        - cl_src{{ i }}_lens{{ j }}
      {% endfor %}
      {% for i in range(5) %}
        - cl_lens{{ i }}_lens{{ i }}
      {% endfor %}

  cosmosis:
    sampler: fisher
    output_dir: output/
    output: &fisher_fname output/fisher.txt
    debug: True
    quiet: False
    mpi: False
    # parameters for individual samplers:
    test:
      fatal_errors: True
    emcee:
      walkers: 10
      nsample: 20
    grid:
      nsample_dimension: 5
    fisher:
      step_size: 0.02
    # which parameters to vary in the chains
    parameters:
      Omega_c: [0.1, 0.22, 0.9]
      sigma8: [0.4, 0.8, 1.2]
      #w0: [-1.0,  -1.0, -0.5]
      #wa: [-1, 0.0, 1]
      h: [0.5, 0.6727, 0.8]
      n_s: [0.9, 0.9645, 1.0]
      eta_ia: [-1.0, 0.0, 1.0]
      eta_ia_highz: [-1.0, 0.0, 1.0]
      beta_ia: [0.5, 1.0, 1.5 ]
      A0: [2.0, 5.0, 10.0]
  
      mult_bias: [-0.1 0.0 0.1]
    # SRD bias values. So far they are hard coded here.
      {% for i, bias in [(0, 1.562362), (1, 1.732963), (2, 1.913252), (3, 2.100644), (4, 2.293210)] %}
      bias_lens{{ i }}: [0, {{ bias }}, 10]
      {% endfor %}

      # photoz shifts for the lensing sources
      {% for i in range(5) %}
      src{{ i }}_delta_z: [-0.2, 0.0, 0.2]
      {% endfor %}
  
      # photoz shifts for the lenses
      {% for i in range(5) %}
      lens{{ i }}_delta_z: [-0.2, 0.0, 0.2]
      {% endfor %}
  
postprocess:
  input: *fisher_fname
  latex_table: data/srd_v1.tex
  triangle_plot: data/srd_v1.pdf
